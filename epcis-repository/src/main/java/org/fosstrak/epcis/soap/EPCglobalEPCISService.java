package org.fosstrak.epcis.soap;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF (incubator) 2.0.4-incubator Wed Jan 30
 * 15:43:44 CET 2008 Generated source version: 2.0.4-incubator
 */

@WebServiceClient(name = "EPCglobalEPCISService", targetNamespace = "urn:epcglobal:epcis:wsdl:1")
public class EPCglobalEPCISService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("urn:epcglobal:epcis:wsdl:1", "EPCglobalEPCISService");
    public final static QName EPCglobalEPCISServicePort = new QName("urn:epcglobal:epcis:wsdl:1",
            "EPCglobalEPCISServicePort");
    static {
        WSDL_LOCATION = EPCglobalEPCISService.class.getResource("/wsdl/EPCglobal-epcis-query-1_0.wsdl");
    }

    public EPCglobalEPCISService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public EPCglobalEPCISService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EPCglobalEPCISService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public EPCglobalEPCISService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public EPCglobalEPCISService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public EPCglobalEPCISService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns EPCglobalEPCISServicePort
     */
    @WebEndpoint(name = "EPCglobalEPCISServicePort")
    public EPCISServicePortType getEPCglobalEPCISServicePort() {
        return (EPCISServicePortType) super.getPort(EPCglobalEPCISServicePort, EPCISServicePortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EPCISServicePortType
     */
    @WebEndpoint(name = "EPCglobalEPCISServicePort")
    public EPCISServicePortType getEPCglobalEPCISServicePort(WebServiceFeature... features) {
        return super.getPort(EPCglobalEPCISServicePort, EPCISServicePortType.class, features);
    }

}
